// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220918194942_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebApplication1.Data.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MobileNo")
                        .HasColumnType("int");

                    b.Property<string>("NIC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReservationsReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservationsReservationId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("WebApplication1.Data.Features", b =>
                {
                    b.Property<int>("FeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FeatureId");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("WebApplication1.Data.Features_RoomTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FeatureId")
                        .HasColumnType("int");

                    b.Property<int>("RoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FeatureId");

                    b.HasIndex("RoomTypeId");

                    b.ToTable("Features_RoomTypes");
                });

            modelBuilder.Entity("WebApplication1.Data.Prices", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrentPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomTypesRoomTypeId")
                        .HasColumnType("int");

                    b.HasKey("PriceId");

                    b.HasIndex("RoomTypesRoomTypeId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("WebApplication1.Data.PropertyInfos", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PropertyId");

                    b.ToTable("PropertyInfos");
                });

            modelBuilder.Entity("WebApplication1.Data.Reservations", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CheckIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyInfosPropertyId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomsRoomId")
                        .HasColumnType("int");

                    b.Property<int>("TotalDays")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.HasIndex("PropertyInfosPropertyId");

                    b.HasIndex("RoomsRoomId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("WebApplication1.Data.RoomTypes", b =>
                {
                    b.Property<int>("RoomTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoomsRoomId")
                        .HasColumnType("int");

                    b.HasKey("RoomTypeId");

                    b.HasIndex("RoomsRoomId");

                    b.ToTable("RoomTypes");
                });

            modelBuilder.Entity("WebApplication1.Data.Rooms", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PropertyInfosPropertyId")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("PropertyInfosPropertyId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("WebApplication1.Data.Contacts", b =>
                {
                    b.HasOne("WebApplication1.Data.Reservations", "Reservations")
                        .WithMany("Contacts")
                        .HasForeignKey("ReservationsReservationId");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("WebApplication1.Data.Features_RoomTypes", b =>
                {
                    b.HasOne("WebApplication1.Data.Features", "Features")
                        .WithMany("Features_RoomTypes")
                        .HasForeignKey("FeatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Data.RoomTypes", "RoomTypes")
                        .WithMany("Features_RoomTypes")
                        .HasForeignKey("RoomTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Features");

                    b.Navigation("RoomTypes");
                });

            modelBuilder.Entity("WebApplication1.Data.Prices", b =>
                {
                    b.HasOne("WebApplication1.Data.RoomTypes", "RoomTypes")
                        .WithMany("Prices")
                        .HasForeignKey("RoomTypesRoomTypeId");

                    b.Navigation("RoomTypes");
                });

            modelBuilder.Entity("WebApplication1.Data.Reservations", b =>
                {
                    b.HasOne("WebApplication1.Data.PropertyInfos", "PropertyInfos")
                        .WithMany("Reservations")
                        .HasForeignKey("PropertyInfosPropertyId");

                    b.HasOne("WebApplication1.Data.Rooms", "Rooms")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomsRoomId");

                    b.Navigation("PropertyInfos");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("WebApplication1.Data.RoomTypes", b =>
                {
                    b.HasOne("WebApplication1.Data.Rooms", "Rooms")
                        .WithMany("RoomTypes")
                        .HasForeignKey("RoomsRoomId");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("WebApplication1.Data.Rooms", b =>
                {
                    b.HasOne("WebApplication1.Data.PropertyInfos", "PropertyInfos")
                        .WithMany("Rooms")
                        .HasForeignKey("PropertyInfosPropertyId");

                    b.Navigation("PropertyInfos");
                });

            modelBuilder.Entity("WebApplication1.Data.Features", b =>
                {
                    b.Navigation("Features_RoomTypes");
                });

            modelBuilder.Entity("WebApplication1.Data.PropertyInfos", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("WebApplication1.Data.Reservations", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("WebApplication1.Data.RoomTypes", b =>
                {
                    b.Navigation("Features_RoomTypes");

                    b.Navigation("Prices");
                });

            modelBuilder.Entity("WebApplication1.Data.Rooms", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("RoomTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
